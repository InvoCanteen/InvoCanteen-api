generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum CartStatus {
  ACTIVE
  ABANDONED
  CHECKED_OUT
}

enum PayStatus {
  UNPAID
  PAID
}

model User {
  id           Int     @id @default(autoincrement())
  email        String  @unique
  name         String
  password     String
  photoProfile String?
  carts        Cart[]
  orders       Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique

  products Product[]
}

model Product {
  id           Int       @id @default(autoincrement())
  name         String
  categoryId   Int?
  category     Category? @relation(fields: [categoryId], references: [id])
  price        Decimal   @db.Decimal(10, 2)
  description  String?
  imageProduct String?

  cartItems  CartItem[]
  orderItems OrderItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
}

model Cart {
  id        Int   @id @default(autoincrement())
  cashierId Int?
  cashier   User? @relation(fields: [cashierId], references: [id])

  items    CartItem[]
  subtotal Decimal    @default(0) @db.Decimal(10, 2)
  tax      Decimal    @default(0) @db.Decimal(10, 2)
  total    Decimal    @default(0) @db.Decimal(10, 2)
  status   CartStatus @default(ACTIVE)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Order[]

  @@index([cashierId])
  @@index([status])
}

model CartItem {
  id     Int  @id @default(autoincrement())
  cartId Int
  cart   Cart @relation(fields: [cartId], references: [id])

  productId Int
  product   Product @relation(fields: [productId], references: [id])

  quantity Int     @default(1)
  price    Decimal @db.Decimal(10, 2)
  subtotal Decimal @db.Decimal(10, 2)

  createdAt DateTime @default(now())
}

model Order {
  id           Int   @id @default(autoincrement())
  sourceCartId Int?
  sourceCart   Cart? @relation(fields: [sourceCartId], references: [id], onDelete: SetNull)

  cashierId Int?
  cashier   User? @relation(fields: [cashierId], references: [id])

  items    OrderItem[]
  subtotal Decimal     @default(0) @db.Decimal(10, 2)
  tax      Decimal     @default(0) @db.Decimal(10, 2)
  total    Decimal     @default(0) @db.Decimal(10, 2)

  payStatus PayStatus @default(UNPAID)
  paidAt    DateTime?

  notes String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([cashierId])
  @@index([payStatus])
  @@index([createdAt])
  @@map("orders")
}

model OrderItem {
  id      Int   @id @default(autoincrement())
  orderId Int
  order   Order @relation(fields: [orderId], references: [id])

  productId Int
  product   Product @relation(fields: [productId], references: [id])

  quantity Int     @default(1)
  price    Decimal @db.Decimal(10, 2)
  subtotal Decimal @db.Decimal(10, 2)

  createdAt DateTime @default(now())
}
